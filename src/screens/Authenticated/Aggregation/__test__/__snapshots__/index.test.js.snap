// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Banks /> render Banks correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFFFFF",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
    ]
  }
>
  <View
    justifyContent="flex-start"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flexBasis": 0,
          "flexDirection": "column",
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "flex-start",
          "paddingBottom": 25,
          "paddingLeft": 25,
          "paddingRight": 25,
          "paddingTop": 25,
        },
      ]
    }
  >
    <Text
      align="left"
      isPrimary={true}
      semiBold={true}
      size={18}
      style={
        Array [
          Object {
            "color": "#003D7C",
            "flexShrink": 1,
            "fontFamily": "Segoe UI",
            "fontSize": 18,
            "fontWeight": "normal",
            "textAlign": "left",
            "textDecorationColor": "black",
            "textDecorationLine": "none",
            "textDecorationStyle": "solid",
            "textTransform": "none",
            "width": "100%",
          },
          Object {
            "marginBottom": 15,
          },
        ]
      }
    >
      Selectionnez une banque à connecter:
    </Text>
    <View
      style={
        Array [
          Object {
            "marginBottom": 20,
            "width": "100%",
          },
          Object {
            "marginBottom": 5,
          },
        ]
      }
    >
      <TextInput
        accessibilityLabel="filterBanks"
        allowFontScaling={true}
        autoCapitalize="none"
        name="filterBanks"
        onChangeText={[Function]}
        placeholder="Chercher dans les banques.."
        placeholderTextColor="#BFCEDE"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "rgba(191, 206, 222, 1)",
              "borderRadius": 5,
              "borderStyle": "solid",
              "borderWidth": 1,
              "color": "#003D7C",
              "fontSize": 16,
              "height": 52,
              "marginBottom": 5,
              "paddingBottom": 0,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 0,
              "textAlign": "left",
              "width": "100%",
            },
          ]
        }
        testID="filterBanks"
        underlineColorAndroid="transparent"
      />
    </View>
    <RCTScrollView
      ListEmptyComponent={
        <Styled(Text)
          bold={true}
          isSecondary={true}
          size={18}
        >
          Aucune compte en cours
        </Styled(Text)>
      }
      data={
        Array [
          Object {
            "comments": null,
            "group": null,
            "icon": "https://cdn.tink.se/provider-images/fr/fr-cic.png",
            "id": "60a3b97628982178073991e7",
            "name": "Crédit Industriel et Commercial",
            "nationalId": "fr-cic-ob",
            "standard": Object {
              "clientConfig": null,
              "externalId": "fr-cic-ob",
              "maxConsentPeriodAllowedInDays": 0,
              "maxNbAccountsPerConsent": 0,
              "name": null,
              "specifics": null,
              "url": null,
            },
            "status": "ACTIVE",
          },
          Object {
            "comments": null,
            "group": null,
            "icon": "https://cdn.tink.se/provider-images/fr/fr-n26.png",
            "id": "60a3b97628982178073991e6",
            "name": "N26",
            "nationalId": "fr-n26-ob",
            "standard": Object {
              "clientConfig": null,
              "externalId": "fr-n26-ob",
              "maxConsentPeriodAllowedInDays": 0,
              "maxNbAccountsPerConsent": 0,
              "name": null,
              "specifics": null,
              "url": null,
            },
            "status": "ACTIVE",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "alignSelf": "stretch",
          },
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            mBottom={10}
            mTop={12}
            pBottom={1}
            pLeft={13}
            pRight={13}
            pTop={10}
            radius={11}
            style={
              Array [
                Object {
                  "backgroundColor": "#F8F8F9",
                  "borderColor": "#BFCEDE",
                  "borderRadius": 11,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "marginBottom": 10,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 12,
                  "paddingBottom": 1,
                  "paddingLeft": 13,
                  "paddingRight": 13,
                  "paddingTop": 10,
                  "width": "100%",
                },
                Object {
                  "minHeight": 80,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "marginBottom": 8,
                  "opacity": 1,
                }
              }
            >
              <Image
                source={
                  Object {
                    "uri": "https://cdn.tink.se/provider-images/fr/fr-cic.png",
                  }
                }
                style={
                  Array [
                    Object {
                      "borderRadius": 60,
                      "height": 30,
                      "lineHeight": 80,
                      "marginRight": 8,
                      "paddingBottom": 30,
                      "paddingLeft": 30,
                      "paddingRight": 30,
                      "paddingTop": 30,
                      "textAlign": "center",
                      "width": 30,
                    },
                  ]
                }
              />
              <Text
                align="left"
                isPrimary={true}
                semiBold={true}
                style={
                  Array [
                    Object {
                      "color": "#003D7C",
                      "flexShrink": 1,
                      "fontFamily": "Segoe UI",
                      "fontSize": 16,
                      "fontWeight": "normal",
                      "textAlign": "left",
                      "textDecorationColor": "black",
                      "textDecorationLine": "none",
                      "textDecorationStyle": "solid",
                      "textTransform": "none",
                      "width": "100%",
                    },
                    Object {
                      "paddingLeft": 5,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                Crédit Industriel et Commercial
              </Text>
              <View
                style={
                  Object {
                    "paddingRight": 10,
                    "paddingTop": 12,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="31"
                  bbWidth="31"
                  fill="none"
                  focusable={false}
                  height="31"
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 31,
                        "width": 31,
                      },
                    ]
                  }
                  vbHeight={26}
                  vbWidth={26}
                  width="31"
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M10.2305 18.4984C10.5367 18.8047 11.0305 18.8047 11.3367 18.4984L16.5305 13.3047C16.7742 13.0609 16.7742 12.6672 16.5305 12.4234L11.3367 7.22969C11.0305 6.92344 10.5367 6.92344 10.2305 7.22969C9.92422 7.53594 9.92422 8.02969 10.2305 8.33594L14.7555 12.8672L10.2242 17.3984C9.92422 17.6984 9.92422 18.1984 10.2305 18.4984Z"
                      fill={4278205820}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGCircle
                      cx="13"
                      cy="13"
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      r="12.5"
                      stroke={4278205820}
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            mBottom={10}
            mTop={12}
            pBottom={1}
            pLeft={13}
            pRight={13}
            pTop={10}
            radius={11}
            style={
              Array [
                Object {
                  "backgroundColor": "#F8F8F9",
                  "borderColor": "#BFCEDE",
                  "borderRadius": 11,
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "marginBottom": 10,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "marginTop": 12,
                  "paddingBottom": 1,
                  "paddingLeft": 13,
                  "paddingRight": 13,
                  "paddingTop": 10,
                  "width": "100%",
                },
                Object {
                  "minHeight": 80,
                },
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "marginBottom": 8,
                  "opacity": 1,
                }
              }
            >
              <Image
                source={
                  Object {
                    "uri": "https://cdn.tink.se/provider-images/fr/fr-n26.png",
                  }
                }
                style={
                  Array [
                    Object {
                      "borderRadius": 60,
                      "height": 30,
                      "lineHeight": 80,
                      "marginRight": 8,
                      "paddingBottom": 30,
                      "paddingLeft": 30,
                      "paddingRight": 30,
                      "paddingTop": 30,
                      "textAlign": "center",
                      "width": 30,
                    },
                  ]
                }
              />
              <Text
                align="left"
                isPrimary={true}
                semiBold={true}
                style={
                  Array [
                    Object {
                      "color": "#003D7C",
                      "flexShrink": 1,
                      "fontFamily": "Segoe UI",
                      "fontSize": 16,
                      "fontWeight": "normal",
                      "textAlign": "left",
                      "textDecorationColor": "black",
                      "textDecorationLine": "none",
                      "textDecorationStyle": "solid",
                      "textTransform": "none",
                      "width": "100%",
                    },
                    Object {
                      "paddingLeft": 5,
                      "paddingTop": 16,
                    },
                  ]
                }
              >
                N26
              </Text>
              <View
                style={
                  Object {
                    "paddingRight": 10,
                    "paddingTop": 12,
                  }
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight="31"
                  bbWidth="31"
                  fill="none"
                  focusable={false}
                  height="31"
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 31,
                        "width": 31,
                      },
                    ]
                  }
                  vbHeight={26}
                  vbWidth={26}
                  width="31"
                >
                  <RNSVGGroup
                    fill={null}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  >
                    <RNSVGPath
                      d="M10.2305 18.4984C10.5367 18.8047 11.0305 18.8047 11.3367 18.4984L16.5305 13.3047C16.7742 13.0609 16.7742 12.6672 16.5305 12.4234L11.3367 7.22969C11.0305 6.92344 10.5367 6.92344 10.2305 7.22969C9.92422 7.53594 9.92422 8.02969 10.2305 8.33594L14.7555 12.8672L10.2242 17.3984C9.92422 17.6984 9.92422 18.1984 10.2305 18.4984Z"
                      fill={4278205820}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                    <RNSVGCircle
                      cx="13"
                      cy="13"
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      r="12.5"
                      stroke={4278205820}
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`<Banks /> render Empty Banks list 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#FFFFFF",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
      },
    ]
  }
>
  <View
    justifyContent="flex-start"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flexBasis": 0,
          "flexDirection": "column",
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "flex-start",
          "paddingBottom": 25,
          "paddingLeft": 25,
          "paddingRight": 25,
          "paddingTop": 25,
        },
      ]
    }
  >
    <Text
      align="left"
      isPrimary={true}
      semiBold={true}
      size={18}
      style={
        Array [
          Object {
            "color": "#003D7C",
            "flexShrink": 1,
            "fontFamily": "Segoe UI",
            "fontSize": 18,
            "fontWeight": "normal",
            "textAlign": "left",
            "textDecorationColor": "black",
            "textDecorationLine": "none",
            "textDecorationStyle": "solid",
            "textTransform": "none",
            "width": "100%",
          },
          Object {
            "marginBottom": 15,
          },
        ]
      }
    >
      Selectionnez une banque à connecter:
    </Text>
    <View
      style={
        Array [
          Object {
            "marginBottom": 20,
            "width": "100%",
          },
          Object {
            "marginBottom": 5,
          },
        ]
      }
    >
      <TextInput
        accessibilityLabel="filterBanks"
        allowFontScaling={true}
        autoCapitalize="none"
        name="filterBanks"
        onChangeText={[Function]}
        placeholder="Chercher dans les banques.."
        placeholderTextColor="#BFCEDE"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "rgba(191, 206, 222, 1)",
              "borderRadius": 5,
              "borderStyle": "solid",
              "borderWidth": 1,
              "color": "#003D7C",
              "fontSize": 16,
              "height": 52,
              "marginBottom": 5,
              "paddingBottom": 0,
              "paddingLeft": 20,
              "paddingRight": 20,
              "paddingTop": 0,
              "textAlign": "left",
              "width": "100%",
            },
          ]
        }
        testID="filterBanks"
        underlineColorAndroid="transparent"
      />
    </View>
    <RCTScrollView
      ListEmptyComponent={
        <Styled(Text)
          bold={true}
          isSecondary={true}
          size={18}
        >
          Aucune compte en cours
        </Styled(Text)>
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "alignSelf": "stretch",
          },
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <Text
          bold={true}
          isSecondary={true}
          onLayout={[Function]}
          size={18}
          style={
            Array [
              Object {
                "color": "#00A8FF",
                "flexShrink": 1,
                "fontSize": 18,
                "fontWeight": "bold",
                "textAlign": "center",
                "textDecorationColor": "black",
                "textDecorationLine": "none",
                "textDecorationStyle": "solid",
                "textTransform": "none",
                "width": "100%",
              },
            ]
          }
        >
          Aucune compte en cours
        </Text>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
